<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>cn.ponfee</groupId>
  <artifactId>scheduler-parent</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <!--
    参考文章：https://central.sonatype.org/publish/requirements/#supported-code-hosting-services-for-personal-groupid

    发布命令：
      1.1）deploy方式：mvn -Drevision=_ versions:set -DnewVersion=1.9-SNAPSHOT && mvn clean deploy -Prelease -DskipTests -Dcheckstyle.skip=true -U
      2.1）release交互模式：
          | ```bash
          | mvn release:update-versions \
          |   -B \
          |   -\-batch-mode \
          |   -DdevelopmentVersion=1.9-SNAPSHOT \
          | && \
          | mvn release:prepare release:perform \
          |   -Prelease \
          |   -Darguments="-Dcheckstyle.skip=true"
          | ```
      2.2）release非交互式：
          | ```bash
          | mvn release:update-versions \
          |   -B \
          |   -\-batch-mode \
          |   -DdevelopmentVersion=1.9-SNAPSHOT \
          | && \
          | mvn release:prepare release:perform \
          |   -Prelease \
          |   -Darguments="-Dcheckstyle.skip=true" \
          |   -DreleaseVersion=1.9 \
          |   -Dtag=v1.9 \
          |   -DdevelopmentVersion=1.9-SNAPSHOT
          | ```

    注意事项：
      1）使用“mvnw”命令需要确认“~/.m2”目录下是否有settings.xml文件且正确配置<server>元素
      2）release版本deploy完后还需要在“s01.oss.sonatype.org”页面上手动操作：“Staging Repositories” -> “Close” -> “Release”
  -->

  <name>Distributed Scheduler</name>
  <description>A distributed task scheduling framework</description>
  <url>https://github.com/ponfee/distributed-scheduler</url>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Ponfee</name>
      <email>ponfee.cn@gmail.com</email>
      <organization>ponfee.cn</organization>
      <organizationUrl>http://www.ponfee.cn/</organizationUrl>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:https://github.com/ponfee/distributed-scheduler.git</connection>
    <developerConnection>scm:git:https://github.com/ponfee/distributed-scheduler.git</developerConnection>
    <url>https://github.com/ponfee/distributed-scheduler</url>
    <tag>HEAD</tag>
  </scm>
  <!-- 根据version中是否带有“-SNAPSHOT”来判断是分发到snapshots库还是releases库 -->
  <distributionManagement>
    <!-- 添加到maven的安装目录的settings.xml中
    <servers>
      <server>
        <id>ossrh</id>
        <username>username</username>
        <password>password</password>
      </server>
    </servers> -->
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <modules>
    <module>scheduler-common</module>
    <module>scheduler-core</module>
    <module>scheduler-test</module>
    <module>scheduler-supervisor</module>
    <module>scheduler-worker</module>
    <module>scheduler-registry</module>
    <module>scheduler-dispatch</module>
  </modules>

  <properties>
    <revision>1.10-SNAPSHOT</revision>
    <file.encoding>UTF-8</file.encoding>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>${file.encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${file.encoding}</project.reporting.outputEncoding>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>
    <argLine>-server -Xms256m -Xmx512m -Dfile.encoding=UTF-8 -Djava.net.preferIPv4Stack=true -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=512m</argLine>

    <spring-boot.version>2.7.8</spring-boot.version>
    <mapstruct.version>1.5.3.Final</mapstruct.version>
    <fastjson.version>1.2.83</fastjson.version>
    <guava.version>31.1-jre</guava.version>
    <commons-collections4.version>4.4</commons-collections4.version>
    <commons-io.version>2.11.0</commons-io.version>
    <joda-time.version>2.12.2</joda-time.version>
    <mybatis-spring-boot-starter.version>2.3.0</mybatis-spring-boot-starter.version>
    <mariaDB4j.version>2.5.3</mariaDB4j.version>
    <embedded-redis.version>1.2</embedded-redis.version>
    <testcontainers.version>1.17.6</testcontainers.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>cn.ponfee</groupId>
        <artifactId>scheduler-common</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>cn.ponfee</groupId>
        <artifactId>scheduler-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>cn.ponfee</groupId>
        <artifactId>scheduler-test</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>cn.ponfee</groupId>
        <artifactId>scheduler-registry-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>cn.ponfee</groupId>
        <artifactId>scheduler-dispatch-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>cn.ponfee</groupId>
        <artifactId>scheduler-supervisor</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>cn.ponfee</groupId>
        <artifactId>scheduler-worker</artifactId>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Exclude logback, empty dependency -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Help for compile：需要注意以下几个processor的定义顺序，否则需要使用annotationProcessorPaths指定 -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!-- Generate annotated @Mapper interface implementation class -->
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-processor</artifactId>
      <version>${mapstruct.version}</version>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-indexer</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <!-- 在编译期校验潜在错误使用约束的问题  -->
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator-annotation-processor</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.skyscreamer</groupId>
      <artifactId>jsonassert</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>develop</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>release</id>
      <properties>
        <jacoco.skip>false</jacoco.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.0.1</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>2.5.3</version>
            <configuration>
              <autoVersionSubmodules>true</autoVersionSubmodules>
              <useReleaseProfile>false</useReleaseProfile>
              <releaseProfiles>release</releaseProfiles>
              <generateReleasePoms>false</generateReleasePoms>
              <tagNameFormat>v@{project.version}</tagNameFormat>
              <arguments>-DskipTests</arguments>
              <preparationGoals>clean verify</preparationGoals>
              <goals>deploy</goals>
              <checkModificationExcludes>
                <checkModificationExclude>**/pom.xml</checkModificationExclude>
              </checkModificationExcludes>
            </configuration>
          </plugin>
          <!-- <plugin>
            Note: 加上会导致把可执行的jar包deploy到sonatype上
            Nexus-bug: https://issues.sonatype.org/browse/NEXUS-9138
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin> -->
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <!-- mybatis xml -->
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.xml</include>
        </includes>
        <filtering>false</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.6.13</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.13.0</version>
        <configuration>
          <generateBackupPoms>false</generateBackupPoms>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <encoding>${file.encoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <compilerVersion>${maven.compiler.compilerVersion}</compilerVersion>
          <encoding>${file.encoding}</encoding>
          <compilerArgument>-Xlint:unchecked,deprecation</compilerArgument>
          <!-- <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
              <version>${spring-boot.version}</version>
            </path>
            <path>
              <groupId>org.springframework</groupId>
              <artifactId>spring-context-indexer</artifactId>
              <version>${spring-framework.version}</version>
            </path>
          </annotationProcessorPaths> -->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.8</version>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>jacocoArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-report-aggregate</id>
            <phase>verify</phase>
            <goals>
              <goal>report-aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <printSummary>true</printSummary>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <forkCount>1</forkCount>
          <reuseForks>true</reuseForks>
          <argLine>${argLine} ${jacocoArgLine}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doclint>none</doclint>
        </configuration>
      </plugin>
    </plugins>

  </build>

</project>
